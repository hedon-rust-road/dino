mod bundle;

use anyhow::Result;

pub use bundle::{run_bundle, Options};

pub type ModulePath = String;
pub type ModuleSource = String;

pub trait ModuleLoader {
    fn load(&self, specifier: &str) -> Result<ModuleSource>;
    fn resolve(&self, base: Option<&str>, specifier: &str) -> Result<ModulePath>;
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn bundle_ts_should_work() -> Result<()> {
        let ret = run_bundle("fixtures/main.ts", &Default::default())?;
        assert_eq!(ret, "// Dune v0.1.0\n// It's not recommended to edit this code manually since it's generated by `dune bundle`\n\nasync function execute(name) {\n    console.log('Executing lib');\n    return `Hello ${name}!`;\n}\nasync function main() {\n    console.log('Executing main');\n    console.log(await execute('world'));\n}\nexport { main as default };\n");
        Ok(())
    }
}
